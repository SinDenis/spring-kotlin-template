name: project cicd flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean install
      - uses: actions/upload-artifact@v2
        with:
          name: app.jar
          path: target/spring-kotlin-template.jar

  docker-build-push:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build Jar with Maven
        run: mvn clean package
      - name: Build & push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/spring-kotlin-template
          tags: latest
          registry: docker.io
          dockerfile: Dockerfile
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest
    needs: [ docker-build-push ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'
      - name: Authenticate and deploy to Kubernetes
        env:
          KUBECONFIG_FILE: ${{ secrets.KUBECONFIG }}
          KUBE_NAMESPACE: sindenis
        run: |
          echo "$KUBECONFIG_FILE" > kubeconfig.yaml
          kubectl config use-context cloud_okteto_com-context --kubeconfig=kubeconfig.yaml
          kubectl apply --kubeconfig=kubeconfig.yaml --namespace=$KUBE_NAMESPACE -f k8s
